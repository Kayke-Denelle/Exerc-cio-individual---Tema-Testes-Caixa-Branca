import{D as s}from"./constants-BAQss29X.js";var e=(r=>(r.True="true",r.False="false",r.Never="never",r.Always="always",r.Auto="auto",r))(e||{});function m(r){return r==null?void 0:r.replace(/^[`"\[](.+?)[`"\]]$/,"$1")}function E(r,n,t=!0){if(r==null||["MongoDB"].includes(n)||t=="never"||(t==!0&&(t="always"),t==!1&&(t="auto"),n==s.JDBC&&t=="auto"))return r;const u=r.match(/[A-Z]/g)&&![s.SNOWFLAKE,s.ORACLE,s.DM,s.DB2,s.AS400].includes(n),c=/[~!@#$%^&*()/\s\|,.<>?"'();:+\-=\[\]{}]/;return u||r.match(c)||t=="always"||r.match(/^(user|IF|KEY|DESC|LENGTH|GROUP|GROUPS|ORDER|TABLE|FROM|JOIN|INDEX|CONDITION|SYSTEM|TABLE|TYPE|VALUE|BACKUP|BEGIN|ACCOUNT|ACTION|ALL|ANY|CURRENT|DATA|GRANT|character|explain|union|REGEXP|source|primary|date|condition)$/i)?(r=m(r),[s.MYSQL,s.MARIA_DB,s.DORIS,s.NEO4J,s.BIG_QUERY].includes(n)?`\`${r}\``:`"${r}"`):r}function a(r){return typeof r=="number"?r-r===0:typeof r=="string"&&r.trim()!==""?Number.isFinite?Number.isFinite(+r):isFinite(+r):!1}function D(r,n,t,u={}){const{nullAsEmptyString:c}=u;if(["MongoDB"].includes(t))return n;if(n===""||n==null)return c&&(r!=null&&r.match(/char|text/i))?"''":"null";if(typeof n=="string"){switch(t){case s.ES:return n;case s.PG:case s.REDSHIFT:if(r!=null&&r.match(/bytea/i))return`E'${n}'`.replace(/\\/g,"\\\\");if(n.includes("nextval("))return n;break;case s.ORACLE:if(r!=null&&r.match(/DATE/))return`TO_DATE('${n}','yyyy/mm/dd hh24:mi:ss')`;if(r!=null&&r.match(/BLOB/i)&&n.match(/^0x/i))return`hextoraw('${n.substring(2)}')`;break;case s.TRINO:if(r!=null&&r.match(/DATE/i)&&n.length==10)return`from_iso8601_timestamp('${n}')`;if(r!=null&&r.match(/json/i))return`json_parse('${n.replace(/'/g,"''").replace(/ /g," ").replace(/\\/g,"\\\\")}')`;break}n=n.replace(/'/g,"''").replace(/ /g," ")}if(f(r)&&a(n))return n;const i=`'${n}'`;return[s.MYSQL,s.MARIA_DB,s.DORIS].includes(t)?i.replace(/\\/g,"\\\\"):i}function l(r,n){return f(n)?r:`'${r}'`}function f(r){if(!r||typeof r=="number"||r.includes("[]")||r=="interval")return!1;const n=["int","number","numeric","serial","float","double","decimal","real","bit","bool","boolean","range"];return!r.match(/point/i)&&r.match(new RegExp(n.join("|"),"i"))}export{e as E,D as a,l as g,f as i,E as w};
